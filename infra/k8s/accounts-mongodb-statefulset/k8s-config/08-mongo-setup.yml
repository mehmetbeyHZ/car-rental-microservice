apiVersion: v1
kind: ConfigMap
metadata:
  name: accounts-mongo-setup
data:
  1-create-db-owner.sh: |
    if [ "$K8S_POD_NAME" == "accounts-mongo-0" ]; then 
        mongosh ${MONGO_INITDB_DATABASE} \
            --username ${MONGO_INITDB_ROOT_USERNAME} \
            --password ${MONGO_INITDB_ROOT_PASSWORD} \
            --authenticationDatabase admin \
            --eval "db.createUser({ \
                user: '${MONGO_USERNAME}', \
                pwd: '${MONGO_PASSWORD}', \
                roles: [{ \
                    role: 'dbOwner', \
                    db: '${MONGO_INITDB_DATABASE}' \
                }] \
            });"
    fi
  2-initiate-replica-set.sh: |
    if [ "$K8S_POD_NAME" == "accounts-mongo-0" ]; then 
        members="{_id: 0, host: 'accounts-mongo-0.accounts-mongo-service:27017'}"

        for id in `seq 1 $(( $(echo $K8S_REPLICAS) - 1 ))`; do
            members="${members}, {_id: $id, host: 'accounts-mongo-$id.accounts-mongo-service:27017'}"
        done

        s=0

        while [ $s -eq 0 ]; do
            sleep 10

            echo -e "\n\n[Mongo-Setup] Trying to initiate replica set...\n\n"

            {
                mongosh admin \
                    --username ${MONGO_INITDB_ROOT_USERNAME} \
                    --password ${MONGO_INITDB_ROOT_PASSWORD} \
                    --eval "rs.initiate({_id: 'rs0', members: [$members]});"

                if [ $? == 0 ]; then
                    s=1

                    echo -e "\n\n[Mongo-Setup] Replica set has been initiated successfully!\n\n"
                fi
            } || echo . #Keep while loop from exting if command fails 
        done
    fi &
